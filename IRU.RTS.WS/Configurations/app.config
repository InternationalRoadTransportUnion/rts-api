<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="IRUSqlCommand" type="IRU.Common.EnterpriseLibrary.Data.Configuration.IRUSqlCommandSettings, IRU.Common.EnterpriseLibrary, Version=1.0.1.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="IRU.RTS.WS.CarnetService.Implementation.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
      <section name="IRU.RTS.WS.TerminationService.Implementation.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <cachingConfiguration defaultCacheManager="Cache Manager">
    <cacheManagers>
      <add name="RtsCache" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="1000"
        numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add name="Isolated Storage Cache Store" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.IsolatedStorageBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        encryptionProviderName="" partitionName="RTSPlus" />
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>
  <dataConfiguration>
    <providerMappings>
      <add databaseType="IRU.Common.EnterpriseLibrary.Data.IRUSqlDatabase, IRU.Common.EnterpriseLibrary, Version=1.0.1.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59"
          name="IRUSqlDatabase" />
    </providerMappings>
  </dataConfiguration>
  <system.data>
    <DbProviderFactories>
      <add name="IRUSqlClientFactory"
           invariant="IRUSqlDatabase"
           description="IRU Data Provider for MS-SQL"
           type="IRU.Common.EnterpriseLibrary.Data.IRUSqlClientFactory, IRU.Common.EnterpriseLibrary, Version=1.0.1.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
    </DbProviderFactories>
  </system.data>
  <IRUSqlCommand>
    <Databases>
      <DbParameters database="Current" commandTimeout="60" />
      <DbParameters database="WS_SUBSCRIBER_DB" commandTimeout="60" />
      <DbParameters database="RTSPLUS_LOG" commandTimeout="60" />
    </Databases>
  </IRUSqlCommand>
  <connectionStrings>
    <add name="Current" connectionString="application name=http://rts.iru.org/services;server=localhost\MSSQLSERVER_2K8;database=Current;Integrated Security=true"
      providerName="IRUSqlDatabase" />
    <add name="WsSubscriber" connectionString="application name=http://rts.iru.org/services;server=localhost\MSSQLSERVER_2K8;database=WS_SUBSCRIBER_DB;Integrated Security=true"
      providerName="IRUSqlDatabase" />
    <add name="RTSPlusLog" connectionString="application name=http://rts.iru.org/services;server=localhost\MSSQLSERVER_2K8;database=RTSPLUS_LOG;Integrated Security=true"
      providerName="IRUSqlDatabase" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" />
    <customErrors mode="Off"/>
  </system.web>
  <system.webServer>
    <!--
    <defaultDocument>
      <files>
        <clear />
        <add value="CarnetService-1.svc" />
        <add value="TerminationService-1.svc" />
      </files>
    </defaultDocument>
    -->
  </system.webServer>
  <system.serviceModel>
    <services>
      <service behaviorConfiguration="WithServiceCertificateServiceBehavior"
        name="IRU.RTS.WS.CarnetService.Implementation.CarnetService">
        <endpoint address="" behaviorConfiguration="WSSPaswordDigestSecurityEndpointBehavior" binding="wsHttpBinding"
          bindingConfiguration="wsHttpBindingCfg" bindingNamespace="http://rts.iru.org/services/CarnetService-1" contract="ICarnetServiceSEI">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="x509" behaviorConfiguration="WSSCertificateSecurityEndpointBehavior" binding="customBinding"
          bindingConfiguration="customBindingMutualCertificateDuplexCfg" bindingNamespace="http://rts.iru.org/services/CarnetService-1" contract="ICarnetServiceSEI">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>        
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:9080" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="WithServiceCertificateServiceBehavior"
        name="IRU.RTS.WS.TerminationService.Implementation.TerminationService">
        <endpoint address="" behaviorConfiguration="WSSCertificateSecurityEndpointBehavior" binding="customBinding"
          bindingConfiguration="customBindingMutualCertificateDuplexCfg" bindingNamespace="http://rts.iru.org/services/TerminationService-1" contract="ITerminationServiceSEI">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:9081" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <bindings>
      <customBinding>
        <binding name="customBindingMutualCertificateDuplexCfg">
          <security defaultAlgorithmSuite="Basic128Rsa15"
                    authenticationMode="MutualCertificateDuplex"
                    allowSerializedSigningTokenOnReply="true"
                    requireDerivedKeys="false"
                    securityHeaderLayout="Lax"
                    includeTimestamp="true"
                    keyEntropyMode="CombinedEntropy"
                    messageProtectionOrder="SignBeforeEncrypt"
                    messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"
                    requireSignatureConfirmation="false"
                    requireSecurityContextCancellation="false">
            <localClientSettings cacheCookies="true" detectReplays="true"
             replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
             replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
             sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
             timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
             maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
             negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
             sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
             reconnectTransportOnFailure="true" maxPendingSessions="128" maxCachedCookies="1000"
             timestampValidityDuration="00:05:00" />
            <secureConversationBootstrap />
          </security>
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16"
           messageVersion="Default" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
             maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="524288"
           maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous"
           bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
           keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous"
           realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
           useDefaultWebProxy="true" />
        </binding>
      </customBinding>
      <wsHttpBinding>
        <binding name="wsHttpBindingCfg">
          <security mode="None" />
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="WithMetadataAndExceptionsServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="WithServiceCertificateServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <RTSPlusSecurityBehavior>
            <clientCertificate>              
              <authentication certificateValidationMode="Custom" customCertificateValidatorType="IRU.RTS.WS.Common.Security.RTSPlus.X509.RTSPlusCertificateValidator, IRU.RTS.WS.Common.Security.RTSPlus, Version=1.5.1.0, Culture=neutral, PublicKeyToken=null"/>
            </clientCertificate>
          </RTSPlusSecurityBehavior>
          <serviceAuthorization serviceAuthorizationManagerType="IRU.RTS.WS.Common.Security.RTSPlus.X509.RTSPlusServiceAuthorizationManager, IRU.RTS.WS.Common.Security.RTSPlus, Version=1.5.1.0, Culture=neutral, PublicKeyToken=null" />
          <serviceSecurityAudit auditLogLocation="Application" serviceAuthorizationAuditLevel="SuccessOrFailure" messageAuthenticationAuditLevel="SuccessOrFailure" suppressAuditFailure="true" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="WSSCertificateSecurityEndpointBehavior">
          <ServiceProtectionLevelEndpointBehavior ProtectionLevel="Sign"/>
          <WSNamespacePrefixerBehaviour />
          <WSDbLoggerBehaviour />
        </behavior>
        <behavior name="NoSecurityEndpointBehavior">
          <WSNamespacePrefixerBehaviour />
        </behavior>
        <behavior name="WSSPaswordDigestSecurityEndpointBehavior">
          <WSSPasswordDigestBehavior PasswordValidator="IRU.RTS.WS.Common.Security.RTSPlus.WSS.RTSPlusPasswordValidator, IRU.RTS.WS.Common.Security.RTSPlus, Version=1.5.1.0, Culture=neutral, PublicKeyToken=null" />
          <WSNamespacePrefixerBehaviour />
          <WSDbLoggerBehaviour />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="RTSPlusSecurityBehavior" type="IRU.RTS.WS.Common.Security.RTSPlus.X509.RTSPlusSecurityBehaviorExtension, IRU.RTS.WS.Common.Security.RTSPlus, Version=1.5.1.0, Culture=neutral, PublicKeyToken=null" />
        <add name="ServiceProtectionLevelEndpointBehavior"
             type="IRU.RTS.WS.Common.Security.RTSPlus.ProtectionLevel.ServiceProtectionLevelEnpointBehaviorExtension, IRU.RTS.WS.Common.Security.RTSPlus, Version=1.5.1.0, Culture=neutral, PublicKeyToken=null" />
        <add name="WSSPasswordDigestBehavior"
             type="IRU.Common.WCF.Security.WSS.PasswordDigest.SecurityBehaviorExtension, IRU.Common.WCF.Security.WSS, Version=1.5.0.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
        <add name="WSNamespacePrefixerBehaviour"
             type="IRU.Common.WCF.Behaviors.Namespace.NamespacePrefixerBehaviourExtension, IRU.Common.WCF.Behaviors, Version=1.5.0.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
        <add name="WSDbLoggerBehaviour"
             type="IRU.RTS.WS.Common.Logging.DbLoggerBehaviourExtension, IRU.RTS.WS.Common.Logging, Version=1.5.1.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <applicationSettings>
    <IRU.RTS.WS.CarnetService.Implementation.Properties.Settings>
      <setting name="MaxCountOfCarnets" serializeAs="String">
        <value>1000</value>
      </setting>
      <setting name="MinTIRCarnetNumber" serializeAs="String">
        <value>51000001</value>
      </setting>
    </IRU.RTS.WS.CarnetService.Implementation.Properties.Settings>
    <IRU.RTS.WS.TerminationService.Implementation.Properties.Settings>
      <setting name="WsUrlWSST" serializeAs="String">
        <value>http://172.25.65.50/rts2/wsst_ws/safetirupload.asmx</value>
      </setting>
      <setting name="SubscriberIdWSST" serializeAs="String">
        <value>RTSPLUS</value>
      </setting>
    </IRU.RTS.WS.TerminationService.Implementation.Properties.Settings>
  </applicationSettings>
<!--  
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="All"
        propagateActivity="true">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="All">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData="RTSServices-TracingAndLogging.svclog" type="System.Diagnostics.XmlWriterTraceListener"
        name="xml" />
    </sharedListeners>
    <trace autoflush="true" />
  </system.diagnostics>
  <system.serviceModel>
    <diagnostics>
      <messageLogging 
        logEntireMessage="true" 
        logMalformedMessages="true"
        logMessagesAtServiceLevel="false" 
        logMessagesAtTransportLevel="true" />
    </diagnostics>
  </system.serviceModel>
-->
</configuration>