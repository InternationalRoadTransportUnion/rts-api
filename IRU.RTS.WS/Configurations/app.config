<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="IRUSqlCommand" type="IRU.Common.EnterpriseLibrary.Data.Configuration.IRUSqlCommandSettings, IRU.Common.EnterpriseLibrary, Version=1.0.1.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="IRU.RTS.WS.CarnetService.Implementation.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
      <section name="IRU.RTS.WS.TerminationService.Implementation.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <dataConfiguration>
    <providerMappings>
      <add databaseType="IRU.Common.EnterpriseLibrary.Data.IRUSqlDatabase, IRU.Common.EnterpriseLibrary, Version=1.0.1.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59"
          name="IRUSqlDatabase" />
    </providerMappings>
  </dataConfiguration>
  <system.data>
    <DbProviderFactories>
      <add name="IRUSqlClientFactory"
           invariant="IRUSqlDatabase"
           description="IRU Data Provider for MS-SQL"
           type="IRU.Common.EnterpriseLibrary.Data.IRUSqlClientFactory, IRU.Common.EnterpriseLibrary, Version=1.0.1.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
    </DbProviderFactories>
  </system.data>
  <IRUSqlCommand>
    <Databases>
      <DbParameters database="Current" commandTimeout="60" />
      <DbParameters database="WS_SUBSCRIBER_DB" commandTimeout="60" />
    </Databases>
  </IRUSqlCommand>
  <connectionStrings>
    <add name="Current" connectionString="application name=http://rts.iru.org/services;server=localhost\MSSQLSERVER_2K8;database=Current;Integrated Security=true"
      providerName="IRUSqlDatabase" />
    <add name="WsSubscriber" connectionString="application name=http://rts.iru.org/services;server=localhost\MSSQLSERVER_2K8;database=WS_SUBSCRIBER_DB;Integrated Security=true"
      providerName="IRUSqlDatabase" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" />
  </system.web>
  <system.webServer>
    <!--
    <defaultDocument>
      <files>
        <clear />
        <add value="CarnetService-1.svc" />
        <add value="TerminationService-1.svc" />
      </files>
    </defaultDocument>
    -->
  </system.webServer>
  <system.serviceModel>
    <services>
      <service behaviorConfiguration="WithMetadataAndExceptionsServiceBehavior"
        name="IRU.RTS.WS.CarnetService.Implementation.CarnetService">
        <endpoint address="" behaviorConfiguration="CarnetServiceWSSecurityEndpointBehavior" binding="wsHttpBinding"
          bindingConfiguration="wsHttpBindingCfg" bindingNamespace="http://rts.iru.org/services/CarnetService-1" contract="ICarnetServiceSEI">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:9080" />
          </baseAddresses>
        </host>
      </service>
      <!--<service behaviorConfiguration="WithMetadataAndExceptionsServiceBehavior"
        name="IRU.RTS.WS.TerminationService.Implementation.TerminationService">
        <endpoint address="" behaviorConfiguration="NoSecurityEndpointBehavior" binding="wsHttpBinding"
          bindingConfiguration="wsHttpBindingCfg" bindingNamespace="http://rts.iru.org/services/TerminationService-1" contract="ITerminationServiceSEI">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:9081" />
          </baseAddresses>
        </host>
      </service>-->
      <service behaviorConfiguration="WithServiceCertificateServiceBehavior"
               name="IRU.RTS.WS.TerminationService.Implementation.TerminationService">
        <endpoint address="" 
                  behaviorConfiguration="CertificateSecurityEndpointBehavior" 
                  binding="customBinding"
                  bindingConfiguration="customBindingMutualCertificateDuplexCfg" 
                  bindingNamespace="http://rts.iru.org/services/TerminationService-1" 
                  contract="ITerminationServiceSEI">
          <identity>
            <!--<dns value="CERT_SIGN_SERVER_CERT"/>-->
            <dns value="rts-plus.iru.org"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:9081" />
          </baseAddresses>
        </host>
      </service>  
    </services>
    <bindings>
      <customBinding>
        <binding name="customBindingMutualCertificateDuplexCfg">
          <security defaultAlgorithmSuite="Basic128Rsa15" 
                    authenticationMode="MutualCertificateDuplex" 
                    allowSerializedSigningTokenOnReply="true"
                    requireDerivedKeys="false" 
                    securityHeaderLayout="Lax" 
                    includeTimestamp="true"
                    keyEntropyMode="CombinedEntropy" 
                    messageProtectionOrder="SignBeforeEncrypt"
                    messageSecurityVersion="WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10"
                    requireSignatureConfirmation="false"
                    requireSecurityContextCancellation="false">
            <localClientSettings cacheCookies="true" detectReplays="true"
             replayCacheSize="900000" maxClockSkew="00:05:00" maxCookieCachingTime="Infinite"
             replayWindow="00:05:00" sessionKeyRenewalInterval="10:00:00"
             sessionKeyRolloverInterval="00:05:00" reconnectTransportOnFailure="true"
             timestampValidityDuration="00:05:00" cookieRenewalThresholdPercentage="60" />
            <localServiceSettings detectReplays="true" issuedCookieLifetime="10:00:00"
             maxStatefulNegotiations="128" replayCacheSize="900000" maxClockSkew="00:05:00"
             negotiationTimeout="00:01:00" replayWindow="00:05:00" inactivityTimeout="00:02:00"
             sessionKeyRenewalInterval="15:00:00" sessionKeyRolloverInterval="00:05:00"
             reconnectTransportOnFailure="true" maxPendingSessions="128" maxCachedCookies="1000"
             timestampValidityDuration="00:05:00" />
            <secureConversationBootstrap />
          </security>
          <textMessageEncoding maxReadPoolSize="64" maxWritePoolSize="16"
           messageVersion="Default" writeEncoding="utf-8">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
             maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          </textMessageEncoding>
          <httpTransport manualAddressing="false" maxBufferPoolSize="524288"
           maxReceivedMessageSize="65536" allowCookies="false" authenticationScheme="Anonymous"
           bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
           keepAliveEnabled="true" maxBufferSize="65536" proxyAuthenticationScheme="Anonymous"
           realm="" transferMode="Buffered" unsafeConnectionNtlmAuthentication="false"
           useDefaultWebProxy="true" />
        </binding>
      </customBinding>
      <wsHttpBinding>
        <binding name="wsHttpBindingCfg">
          <security mode="None" />
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="WithMetadataAndExceptionsServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="WithServiceCertificateServiceBehavior">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/> 
          <myServiceCredentials useSubscriberCertificateDatabase="true">
            <clientCertificate>
              <!--<authentication certificateValidationMode="Custom" customCertificateValidatorType="WCFServiceCertificate.MyX509CertificateValidator, WCFServiceCertificate"/>-->
              <authentication certificateValidationMode="PeerTrust" />
            </clientCertificate>
            <serviceCertificate findValue="CERT_SIGN_SERVER_CERT"
                                storeLocation="CurrentUser"
                                storeName="My"
                                x509FindType="FindBySubjectName" />
          </myServiceCredentials>
          <!--<serviceAuthorization serviceAuthorizationManagerType="IRU.RTS.WS.TerminationService.Implementation.MyServiceCredentials.MyCertificateAuthorizationManager, IRU.RTS.WS.TerminationService.Implementation, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null" />-->
          <serviceSecurityAudit auditLogLocation="Application" serviceAuthorizationAuditLevel="SuccessOrFailure" messageAuthenticationAuditLevel="SuccessOrFailure" suppressAuditFailure="true" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="CertificateSecurityEndpointBehavior">
          <ServiceProtectionLevelEndpointBehavior ProtectionLevel="Sign"/>
          <WSNamespacePrefixerBehaviour />
        </behavior>
        <behavior name="NoSecurityEndpointBehavior">
          <WSNamespacePrefixerBehaviour />
        </behavior>
        <behavior name="WSSecurityEndpointBehavior">
          <WSSPasswordDigestBehavior />
          <WSNamespacePrefixerBehaviour />
        </behavior>
        <behavior name="CarnetServiceWSSecurityEndpointBehavior">
          <WSSPasswordDigestBehavior PasswordValidator="IRU.RTS.WS.CarnetService.Implementation.CarnetServicePasswordValidator, IRU.RTS.WS.CarnetService.Implementation, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null" />
          <WSNamespacePrefixerBehaviour />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="myServiceCredentials" type="IRU.RTS.WS.TerminationService.Implementation.MyServiceCredentials.MyServiceCredentialsConfigHandler, IRU.RTS.WS.TerminationService.Implementation, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null" />
        <add name="ServiceProtectionLevelEndpointBehavior"
             type="IRU.RTS.WS.TerminationService.Implementation.ProtectionLevel.ServiceProtectionLevelEnpointBehaviorExtension, IRU.RTS.WS.TerminationService.Implementation, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null" />
        <add name="WSSPasswordDigestBehavior"
             type="IRU.Common.WCF.Security.WSS.PasswordDigest.SecurityBehaviorExtension, IRU.Common.WCF.Security.WSS, Version=1.3.6.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
        <add name="WSNamespacePrefixerBehaviour"
             type="IRU.Common.WCF.Behaviors.Namespace.NamespacePrefixerBehaviourExtension, IRU.Common.WCF.Behaviors, Version=1.3.6.0, Culture=neutral, PublicKeyToken=f01c97a8a42dad59" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <applicationSettings>
    <IRU.RTS.WS.CarnetService.Implementation.Properties.Settings>
      <setting name="MaxCountOfCarnets" serializeAs="String">
        <value>1000</value>
      </setting>
      <setting name="MinTIRCarnetNumber" serializeAs="String">
        <value>51000001</value>
      </setting>
    </IRU.RTS.WS.CarnetService.Implementation.Properties.Settings>
    <IRU.RTS.WS.TerminationService.Implementation.Properties.Settings>
    </IRU.RTS.WS.TerminationService.Implementation.Properties.Settings>
  </applicationSettings>
</configuration>