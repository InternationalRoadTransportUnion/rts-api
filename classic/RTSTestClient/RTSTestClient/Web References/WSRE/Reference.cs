//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5472.
// 
#pragma warning disable 1591

namespace RTSTestClient.WSRE {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SafeTirUploadSoap", Namespace="http://www.iru.org")]
    public partial class SafeTirUpload : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WSSTOperationCompleted;
        
        private System.Threading.SendOrPostCallback WSREOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SafeTirUpload() {
            this.Url = global::RTSTestClient.Properties.Settings.Default.RTSTestClient_WSRE_SafeTirUpload;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WSSTCompletedEventHandler WSSTCompleted;
        
        /// <remarks/>
        public event WSRECompletedEventHandler WSRECompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.iru.org/WSST", RequestNamespace="http://www.iru.org", ResponseNamespace="http://www.iru.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SafeTIRUploadAck WSST(SafeTIRUploadParams su) {
            object[] results = this.Invoke("WSST", new object[] {
                        su});
            return ((SafeTIRUploadAck)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWSST(SafeTIRUploadParams su, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WSST", new object[] {
                        su}, callback, asyncState);
        }
        
        /// <remarks/>
        public SafeTIRUploadAck EndWSST(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SafeTIRUploadAck)(results[0]));
        }
        
        /// <remarks/>
        public void WSSTAsync(SafeTIRUploadParams su) {
            this.WSSTAsync(su, null);
        }
        
        /// <remarks/>
        public void WSSTAsync(SafeTIRUploadParams su, object userState) {
            if ((this.WSSTOperationCompleted == null)) {
                this.WSSTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSSTOperationCompleted);
            }
            this.InvokeAsync("WSST", new object[] {
                        su}, this.WSSTOperationCompleted, userState);
        }
        
        private void OnWSSTOperationCompleted(object arg) {
            if ((this.WSSTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSSTCompleted(this, new WSSTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.iru.org/WSRE", RequestNamespace="http://www.iru.org", ResponseNamespace="http://www.iru.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SafeTIRUploadAck WSRE(SafeTIRReconParams su) {
            object[] results = this.Invoke("WSRE", new object[] {
                        su});
            return ((SafeTIRUploadAck)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWSRE(SafeTIRReconParams su, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("WSRE", new object[] {
                        su}, callback, asyncState);
        }
        
        /// <remarks/>
        public SafeTIRUploadAck EndWSRE(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SafeTIRUploadAck)(results[0]));
        }
        
        /// <remarks/>
        public void WSREAsync(SafeTIRReconParams su) {
            this.WSREAsync(su, null);
        }
        
        /// <remarks/>
        public void WSREAsync(SafeTIRReconParams su, object userState) {
            if ((this.WSREOperationCompleted == null)) {
                this.WSREOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSREOperationCompleted);
            }
            this.InvokeAsync("WSRE", new object[] {
                        su}, this.WSREOperationCompleted, userState);
        }
        
        private void OnWSREOperationCompleted(object arg) {
            if ((this.WSRECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSRECompleted(this, new WSRECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5476")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.iru.org")]
    public partial class SafeTIRUploadParams {
        
        private string subscriberIDField;
        
        private string messageTagField;
        
        private byte[] eSessionKeyField;
        
        private byte[] safeTIRUploadDataField;
        
        private string copyToIDField;
        
        private string sender_MessageIDField;
        
        /// <remarks/>
        public string SubscriberID {
            get {
                return this.subscriberIDField;
            }
            set {
                this.subscriberIDField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTag {
            get {
                return this.messageTagField;
            }
            set {
                this.messageTagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ESessionKey {
            get {
                return this.eSessionKeyField;
            }
            set {
                this.eSessionKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] safeTIRUploadData {
            get {
                return this.safeTIRUploadDataField;
            }
            set {
                this.safeTIRUploadDataField = value;
            }
        }
        
        /// <remarks/>
        public string CopyToID {
            get {
                return this.copyToIDField;
            }
            set {
                this.copyToIDField = value;
            }
        }
        
        /// <remarks/>
        public string Sender_MessageID {
            get {
                return this.sender_MessageIDField;
            }
            set {
                this.sender_MessageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5476")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.iru.org")]
    public partial class SafeTIRReconParams {
        
        private string subscriberIDField;
        
        private string messageTagField;
        
        private byte[] eSessionKeyField;
        
        private byte[] safeTIRReconDataField;
        
        private string sender_MessageIDField;
        
        private string information_Exchange_VersionField;
        
        /// <remarks/>
        public string SubscriberID {
            get {
                return this.subscriberIDField;
            }
            set {
                this.subscriberIDField = value;
            }
        }
        
        /// <remarks/>
        public string MessageTag {
            get {
                return this.messageTagField;
            }
            set {
                this.messageTagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ESessionKey {
            get {
                return this.eSessionKeyField;
            }
            set {
                this.eSessionKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SafeTIRReconData {
            get {
                return this.safeTIRReconDataField;
            }
            set {
                this.safeTIRReconDataField = value;
            }
        }
        
        /// <remarks/>
        public string Sender_MessageID {
            get {
                return this.sender_MessageIDField;
            }
            set {
                this.sender_MessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string Information_Exchange_Version {
            get {
                return this.information_Exchange_VersionField;
            }
            set {
                this.information_Exchange_VersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5476")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.iru.org")]
    public partial class SafeTIRUploadAck {
        
        private string versionField;
        
        private string senderField;
        
        private System.DateTime responseTimeField;
        
        private int returnCodeField;
        
        private string sender_MessageIDField;
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ResponseTime {
            get {
                return this.responseTimeField;
            }
            set {
                this.responseTimeField = value;
            }
        }
        
        /// <remarks/>
        public int ReturnCode {
            get {
                return this.returnCodeField;
            }
            set {
                this.returnCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Sender_MessageID {
            get {
                return this.sender_MessageIDField;
            }
            set {
                this.sender_MessageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void WSSTCompletedEventHandler(object sender, WSSTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSSTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSSTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SafeTIRUploadAck Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SafeTIRUploadAck)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void WSRECompletedEventHandler(object sender, WSRECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSRECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSRECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SafeTIRUploadAck Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SafeTIRUploadAck)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591